<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.smbms.dao.user.UserMapper">
	<!-- 登陆 -->
	<select id="getLoginUser" parameterType="String" resultType="User">
		select * from smbms_user where userCode=#{userCode} and userPassword=#{userPassword}
	</select>
	
	<!-- getUserList 查询全部用户信息 -->
	<resultMap type="User" id="user1">
		<id property="userRoleName" column="roleName"/>
	</resultMap>
	<select id="getUserList" resultType="User" resultMap="user1">
		select u.*,r.roleName as userRoleName from smbms_user u,smbms_role r
		 where u.userRole = r.id
		 <if test="userName!=null and userName!=''">
		 	and u.userName LIKE CONCAT('%',#{userName},'%')
		 </if>
 		 <if test="userRole>0">
 		    and u.userRole = #{userRole}
 		 </if>
		 order by creationDate DESC limit #{currentPageNo},#{pageSize}
	</select>
	
	<!-- getUserCount  通过条件查询-用户表记录数 -->	
	<select id="getUserCount" resultType="Integer">
		select count(1) as count from smbms_user u,smbms_role r
		 where u.userRole = r.id
		 <if test="userName!=null and userName!=''">
		 	and u.userName LIKE CONCAT('%',#{userName},'%')
		 </if>
 		 <if test="userRole>0">
 		    and u.userRole = #{userRole}
 		 </if>
	</select>
	
	<!-- 增加用户信息 -->
	<insert id="add" parameterType="User">
		insert into smbms_user (userCode,userName,userPassword,gender,
		 birthday,phone,address,userRole,creationDate,createdBy,idPicPath)
		 values(#{userCode},#{userName},#{userPassword},#{gender},
		 #{birthday},#{phone},#{address},#{userRole},#{creationDate},
		 #{createdBy},#{idPicPath})
	</insert>
	
	<!-- 根据用户ID查看用户的的详细信息 -->
	<select id="getUserById" resultType="User"  resultMap="user1">
		select u.*,r.roleName as userRoleName
		 from smbms_user u,smbms_role r where u.userRole = r.id
		  and u.id= #{u.id} 
	</select>

	<!-- 根据用户ID修改用户数据 -->
	<update id="modify" parameterType="User">
		update smbms_user set userName=#{userName},gender=#{gender},
		birthday=#{birthday},phone=#{phone},address=#{address},
		userRole=#{userRole},modifyBy=#{modifyBy},modifyDate=#{modifyDate}
		 where id = #{id} 
	</update>
	
	<!-- 根据用户ID删除用户数据 -->
	<delete id="deleteUserById" parameterType="Integer">
		delete from smbms_user where id= #{id}
	</delete>
	
	<!-- 修改密码 -->
	<update id="updatePwd" >
		update smbms_user set userPassword= #{userPassword} where id = #{id}
	</update>
	
</mapper>